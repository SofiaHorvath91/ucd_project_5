Check results
=============

E501:34:80:line too long (102 > 79 characters)
E501:37:80:line too long (94 > 79 characters)

Code
=============
from django.db import models


# Category object/model to connect to Book via OneToOne relation
# => Aim of object/model :
# Capture the different categories
# used to categorize books based on their genre
class Category(models.Model):
    class Meta:
        verbose_name_plural = 'Categories'

    name = models.CharField(max_length=254)
    friendly_name = models.CharField(max_length=254, null=True, blank=True)

    def __str__(self):
        return self.name

    def get_friendly_name(self):
        return self.friendly_name


# Book object/model to represent a book
# => Aim of object/model :
# Capture details of a book which
# is offered for sale and can be purchased by user
# => Models/objects connected to Book model/object via OneToOne relation :
# Category to represent the genre of the book
class Book(models.Model):
    id = models.AutoField(primary_key=True)
    image = models.URLField(max_length=1024, null=True, blank=True)
    name = models.CharField(max_length=254, null=True)
    author = models.CharField(max_length=254)
    format = models.CharField(max_length=254)
    book_depository_stars = models.DecimalField(max_digits=6, decimal_places=2, null=True, blank=True)
    price = models.DecimalField(max_digits=6, decimal_places=2)
    isbn = models.CharField(max_length=254)
    category = models.ForeignKey('Category', null=True, blank=True, on_delete=models.SET_NULL)
    img_paths = models.ImageField(null=True, blank=True)

    def __str__(self):
        return self.name
